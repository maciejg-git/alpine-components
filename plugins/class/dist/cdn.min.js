(()=>{function r(a){window.Alpine.directive("class",(e,{value:c,modifiers:d,expression:C},{effect:g,evaluateLater:i})=>{let f=c&&c.toLowerCase().replace(/-(\w)/g,(n,t)=>t.toUpperCase()),p={not:d.includes("not"),only:d.includes("only"),else:d.includes("else")},m=f&&i(f),l=C.split(" ");a.$data(e)._xClasses||a.addScopeToNode(e,{_xClasses:[],_xClassesEnable:!1}),a.$data(e)._xClasses.push({getValue:m,mod:p,classes:l}),a.nextTick(()=>{a.$data(e)._xClassesEnable||(a.$data(e)._xClassesEnable=!0,g(()=>{let n=[],t=[],o=[],u=[];a.$data(e)._xClasses.forEach(s=>{s.getValue&&s.getValue(h=>{if(s.mod.not?!h:h){if(s.mod.only){n.push(s.classes);return}if(s.mod.else){o.length||o.push(s.classes);return}t.push(s.classes)}}),!s.getValue&&s.mod.else&&u.push(s.classes)}),e.classList.remove(...l),l=[],n.length?l=n.flat():(o.length?l=o.flat():u.length&&(l=u.flat()),t.length&&l.push(...t.flat())),e.classList.add(...l)}))})})}document.addEventListener("alpine:init",()=>{Alpine.plugin(r)});})();
